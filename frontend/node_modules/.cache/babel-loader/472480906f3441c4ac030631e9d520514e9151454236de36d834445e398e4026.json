{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theod\\\\WebstormProjects\\\\IowaOpenProgKnockout\\\\frontend\\\\src\\\\Views\\\\Singles.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, Component, useEffect } from \"react\";\nimport { SingleEliminationBracket, DoubleEliminationBracket, Match, MATCH_STATES, SVGViewer } from '@g-loot/react-tournament-brackets';\nimport SinglesBracket from \"./Components/SinglesBracket\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateChampionshipBracketMatches, updateBBracketMatches, updateCBracketMatches, updateDBracketMatches, updateRoundRobinGroups } from \"../features/singles/singlesSlice\";\nimport { decrement, increment } from \"../features/counter/counterSlice\";\nimport Test from \"./Components/Test\";\nimport axios from \"axios\";\nimport SinglesConsolationBracket from \"./Components/SinglesBBracket\";\nimport SinglesRoundRobin from \"./Components/SinglesRoundRobin\";\nimport SinglesBBracket from \"./Components/SinglesBBracket\";\nimport SinglesCBracket from \"./Components/SinglesCBracket\";\n\n// import useWindowSize from \"@g-loot/react-tournament-brackets/dist/src/hooks/use-window-size\";\n\n// export const SingleElimination = () => (\n//     <SingleEliminationBracket\n//         matches={matches}\n//         matchComponent={Match}\n//         svgWrapper={({ children, ...props }) => (\n//             <SVGViewer width={500} height={500} {...props}>\n//                 {children}\n//             </SVGViewer>\n//         )}\n//     />\n// );\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Singles() {\n  _s();\n  // const matches = [\n  //     {\n  //         id: 19753,\n  //         nextMatchId: null,\n  //         participants: [],\n  //         startTime: '2021-05-30',\n  //         state: 'SCHEDULED',\n  //         tournamentRoundText: '3'\n  //     },\n  //     {\n  //         id: 19754,\n  //         nextMatchId: 19753,\n  //         participants: [\n  //             {\n  //                 id: '14754a1a-932c-4992-8dec-f7f94a339960',\n  //                 isWinner: false,\n  //                 name: 'CoKe BoYz',\n  //                 picture: 'teamlogos/client_team_default_logo',\n  //                 resultText: '',\n  //                 status: null\n  //             }\n  //         ],\n  //         startTime: '2021-05-30',\n  //         state: 'SCHEDULED',\n  //         tournamentRoundText: '2'\n  //     },\n  //     {\n  //         id: 19755,\n  //         nextMatchId: 19754,\n  //         participants: [\n  //             {\n  //                 id: '14754a1a-932c-4992-8dec-f7f94a339960',\n  //                 isWinner: true,\n  //                 name: 'CoKe BoYz',\n  //                 picture: 'teamlogos/client_team_default_logo',\n  //                 resultText: 'Won',\n  //                 status: 'PLAYED'\n  //             },\n  //             {\n  //                 id: 'd16315d4-7f2d-427b-ae75-63a1ae82c0a8',\n  //                 isWinner: false,\n  //                 name: 'Aids Team',\n  //                 picture: 'teamlogos/client_team_default_logo',\n  //                 resultText: 'Lost',\n  //                 status: 'PLAYED'\n  //             }\n  //         ],\n  //         startTime: '2021-05-30',\n  //         state: 'SCORE_DONE',\n  //         tournamentRoundText: '1'\n  //     },\n  //     {\n  //         id: 19756,\n  //         nextMatchId: 19754,\n  //         participants: [\n  //             {\n  //                 id: 'd8b9f00a-0ffa-4527-8316-da701894768e',\n  //                 isWinner: false,\n  //                 name: 'Art of kill',\n  //                 picture: 'teamlogos/client_team_default_logo',\n  //                 resultText: '',\n  //                 status: null\n  //             }\n  //         ],\n  //         startTime: '2021-05-30',\n  //         state: 'RUNNING',\n  //         tournamentRoundText: '1'\n  //     },\n  //     {\n  //         id: 19757,\n  //         nextMatchId: 19753,\n  //         participants: [],\n  //         startTime: '2021-05-30',\n  //         state: 'SCHEDULED',\n  //         tournamentRoundText: '2'\n  //     },\n  //     {\n  //         id: 19758,\n  //         nextMatchId: 19757,\n  //         participants: [\n  //             {\n  //                 id: '9397971f-4b2f-44eb-a094-722eb286c59b',\n  //                 isWinner: false,\n  //                 name: 'Crazy Pepes',\n  //                 picture: 'teamlogos/client_team_default_logo',\n  //                 resultText: '',\n  //                 status: null\n  //             }\n  //         ],\n  //         startTime: '2021-05-30',\n  //         state: 'SCHEDULED',\n  //         tournamentRoundText: '1'\n  //     },\n  //     {\n  //         id: 19759,\n  //         nextMatchId: 19757,\n  //         participants: [\n  //             {\n  //                 id: '42fecd89-dc83-4821-80d3-718acb50a30c',\n  //                 isWinner: false,\n  //                 name: 'BLUEJAYS',\n  //                 picture: 'teamlogos/client_team_default_logo',\n  //                 resultText: '',\n  //                 status: null\n  //             },\n  //             {\n  //                 id: 'df01fe2c-18db-4190-9f9e-aa63364128fe',\n  //                 isWinner: false,\n  //                 name: 'Bosphorus',\n  //                 picture: 'teamlogos/r7zn4gr8eajivapvjyzd',\n  //                 resultText: '',\n  //                 status: null\n  //             }\n  //         ],\n  //         startTime: '2021-05-30',\n  //         state: 'SCHEDULED',\n  //         tournamentRoundText: '1'\n  //     }\n  // ]\n  const dispatch = useDispatch();\n  // dispatch(updateMatches([...matches]));\n\n  // const [width, height] = useWindowSize();\n  // const [width, height] = [1920, 1080];\n  // const finalWidth = Math.max(width - 50, 500);\n  // const finalHeight = Math.max(height - 100, 500);\n\n  const count = useSelector(state => state.counter.value);\n  const matchArray = useSelector(state => state.singles.matches);\n  const rrGroup = structuredClone(useSelector(state => state.singles.roundRobinGroups));\n  const [showRR, setShowRR] = useState(true);\n  const [showChampionshipBracket, setShowChampionshipBracket] = useState(true);\n  const [showBBracket, setShowBBracket] = useState(true);\n  const [showCBracket, setShowCBracket] = useState(true);\n  const [showDBracket, setShowDpBracket] = useState(true);\n  const [matchList, setMatchList] = useState([]);\n  useEffect(() => {\n    // await getAllSinglesEntries()\n    async function getSingles() {\n      const res = await getAllSinglesEntries();\n    }\n\n    // const res =\n    // console.log(\"HELLO\")\n    // await axios.get(\"localhost:5000/getAllSinglesEntries\").then((res) => {\n    //     console.log(\"STUFF\")\n    //     console.log(res.data);\n    //     setMatchArray(structuredClone(res.data));\n    // })\n  }, []);\n  // console.log(matchArray)\n\n  useEffect(() => {\n    // alert(\"HELLO\")\n  }, [count]);\n  async function getAllSinglesEntries() {\n    await axios.get(\"http://localhost:5000/getAllSinglesEntries\").then(res => {\n      console.log(\"STUFF\");\n      console.log(res.data);\n      setMatchList(structuredClone(res.data));\n      // setMatchArray(structuredClone(res.data));\n    });\n  }\n\n  // async function test() {\n  //     // await axios.post(\"http://localhost:5000/createMatchArray\", {\"matches\": matchList}).then((res) => {\n  //     //     console.log(res.data);\n  //     // })\n  //     console.log(matchList);\n  //     let res = await axios.post(\"http://localhost:5000/createMatchArray\", {matchList: matchList});\n  //     console.log(res.data);\n  //     dispatch(updateChampionshipBracketMatches(res.data))\n  //     console.log(\"QUAKC\")\n  //     console.log(matchList.slice(matchList.length/2))\n  //     res = await axios.post(\"http://localhost:5000/createMatchArray\", {matchList: matchList.slice(matchList.length/2)});\n  //     console.log(res.data);\n  //     dispatch(updateConsolationBracketMatches(res.data))\n  // }\n\n  async function resetRoundRobinGroups() {\n    let res1 = await axios.get('http://localhost:5000/generateSinglesRoundRobinGroups');\n    let res2 = await axios.get('http://localhost:5000/getSinglesRoundRobinGroups');\n    dispatch(updateRoundRobinGroups(res2.data));\n  }\n  async function getRoundRobinData() {\n    let res2 = await axios.get('http://localhost:5000/getSinglesRoundRobinGroups');\n    dispatch(updateRoundRobinGroups(res2.data));\n    console.log(res2.data);\n  }\n  async function uploadRoundRobinData() {\n    let res = await axios.post(\"http://localhost:5000/uploadSinglesRoundRobinResults\", {\n      matchData: rrGroup\n    });\n  }\n  useEffect(() => {\n    console.log(\"MATCH ARR CHANGE\");\n    console.log(matchArray);\n  }, [matchArray]);\n  async function showMatches() {\n    console.log(matchArray);\n  }\n  async function generateChampionshipBracket() {\n    let res1 = await axios.post(\"http://localhost:5000/uploadSinglesRoundRobinResults\", {\n      matchData: rrGroup\n    });\n    let res = await axios.get(\"http://localhost:5000/generateSinglesChampionshipBracket\");\n    dispatch(updateChampionshipBracketMatches(res.data));\n    res = await axios.get(\"http://localhost:5000/generateSinglesBBracket\");\n    dispatch(updateBBracketMatches(res.data));\n    res = await axios.get(\"http://localhost:5000/generateSinglesCBracket\");\n    dispatch(updateCBracketMatches(res.data));\n    res = await axios.get(\"http://localhost:5000/generateSinglesDBracket\");\n    dispatch(updateDBracketMatches(res.data));\n    // console.log(res.data);\n  }\n\n  // async function enterResults() {\n  //     let temp = structuredClone(matchArray)\n  //     temp[0] = {\n  //         \"id\": 0,\n  //         \"name\": \"name\",\n  //         \"nextMatchId\": 32,\n  //         \"state\": \"SCHEDULED\",\n  //         \"participants\": [\n  //             {\n  //                 \"id\": 1,\n  //                 \"isWinner\": true,\n  //                 \"name\": \"Theodore Thayib\"\n  //             },\n  //             {\n  //                 \"id\": 64,\n  //                 \"isWinner\": false,\n  //                 \"name\": \"64\"\n  //             }\n  //         ]\n  //     }\n  //     temp[32] = {\n  //         id: 32,\n  //         name: \"name\",\n  //         // nextMatchId: midPoint + i,\n  //         nextMatchId: 48,\n  //         state: \"SCHEDULED\",\n  //         participants: [\n  //             {\n  //                 id: \"Theodore Thayib\",\n  //                 isWinner: false,\n  //                 name: \"TBD\",\n  //             },\n  //             {\n  //                 id: \"TBD\",\n  //                 isWinner: false,\n  //                 name: \"TBD\",\n  //             }\n  //         ]\n  //     }\n  //     dispatch(updateMatches(temp))\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetRoundRobinGroups,\n      children: \"Reset round robin groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRoundRobinData,\n      children: \"Get RR Data from DB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadRoundRobinData,\n      children: \"Upload RR Data to DB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateChampionshipBracket,\n      children: \"Generate Championship Bracket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ROUND ROBIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SinglesRoundRobin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CHAMPIONSHIP BRACKET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SinglesBracket, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: setShowCBracket(!showCBracket),\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"C BRACKET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this), showCBracket && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(SinglesCBracket, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 33\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 9\n  }, this);\n}\n_s(Singles, \"w2Y9hPpVlzWft7Ml3nnXLjtGROY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Singles;\nexport default Singles;\nvar _c;\n$RefreshReg$(_c, \"Singles\");","map":{"version":3,"names":["React","useRef","useState","Component","useEffect","SingleEliminationBracket","DoubleEliminationBracket","Match","MATCH_STATES","SVGViewer","SinglesBracket","useSelector","useDispatch","updateChampionshipBracketMatches","updateBBracketMatches","updateCBracketMatches","updateDBracketMatches","updateRoundRobinGroups","decrement","increment","Test","axios","SinglesConsolationBracket","SinglesRoundRobin","SinglesBBracket","SinglesCBracket","jsxDEV","_jsxDEV","Fragment","_Fragment","Singles","_s","dispatch","count","state","counter","value","matchArray","singles","matches","rrGroup","structuredClone","roundRobinGroups","showRR","setShowRR","showChampionshipBracket","setShowChampionshipBracket","showBBracket","setShowBBracket","showCBracket","setShowCBracket","showDBracket","setShowDpBracket","matchList","setMatchList","getSingles","res","getAllSinglesEntries","get","then","console","log","data","resetRoundRobinGroups","res1","res2","getRoundRobinData","uploadRoundRobinData","post","matchData","showMatches","generateChampionshipBracket","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/theod/WebstormProjects/IowaOpenProgKnockout/frontend/src/Views/Singles.jsx"],"sourcesContent":["import React, {useRef, useState, Component, useEffect} from \"react\";\r\nimport {\r\n    SingleEliminationBracket,\r\n    DoubleEliminationBracket,\r\n    Match,\r\n    MATCH_STATES,\r\n    SVGViewer\r\n} from '@g-loot/react-tournament-brackets';\r\nimport SinglesBracket from \"./Components/SinglesBracket\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {\r\n    updateChampionshipBracketMatches,\r\n    updateBBracketMatches,\r\n    updateCBracketMatches,\r\n    updateDBracketMatches,\r\n    updateRoundRobinGroups\r\n} from \"../features/singles/singlesSlice\";\r\nimport {decrement, increment} from \"../features/counter/counterSlice\";\r\nimport Test from \"./Components/Test\";\r\nimport axios from \"axios\";\r\nimport SinglesConsolationBracket from \"./Components/SinglesBBracket\";\r\nimport SinglesRoundRobin from \"./Components/SinglesRoundRobin\";\r\nimport SinglesBBracket from \"./Components/SinglesBBracket\";\r\nimport SinglesCBracket from \"./Components/SinglesCBracket\";\r\n\r\n\r\n// import useWindowSize from \"@g-loot/react-tournament-brackets/dist/src/hooks/use-window-size\";\r\n\r\n// export const SingleElimination = () => (\r\n//     <SingleEliminationBracket\r\n//         matches={matches}\r\n//         matchComponent={Match}\r\n//         svgWrapper={({ children, ...props }) => (\r\n//             <SVGViewer width={500} height={500} {...props}>\r\n//                 {children}\r\n//             </SVGViewer>\r\n//         )}\r\n//     />\r\n// );\r\n\r\nfunction Singles() {\r\n    // const matches = [\r\n    //     {\r\n    //         id: 19753,\r\n    //         nextMatchId: null,\r\n    //         participants: [],\r\n    //         startTime: '2021-05-30',\r\n    //         state: 'SCHEDULED',\r\n    //         tournamentRoundText: '3'\r\n    //     },\r\n    //     {\r\n    //         id: 19754,\r\n    //         nextMatchId: 19753,\r\n    //         participants: [\r\n    //             {\r\n    //                 id: '14754a1a-932c-4992-8dec-f7f94a339960',\r\n    //                 isWinner: false,\r\n    //                 name: 'CoKe BoYz',\r\n    //                 picture: 'teamlogos/client_team_default_logo',\r\n    //                 resultText: '',\r\n    //                 status: null\r\n    //             }\r\n    //         ],\r\n    //         startTime: '2021-05-30',\r\n    //         state: 'SCHEDULED',\r\n    //         tournamentRoundText: '2'\r\n    //     },\r\n    //     {\r\n    //         id: 19755,\r\n    //         nextMatchId: 19754,\r\n    //         participants: [\r\n    //             {\r\n    //                 id: '14754a1a-932c-4992-8dec-f7f94a339960',\r\n    //                 isWinner: true,\r\n    //                 name: 'CoKe BoYz',\r\n    //                 picture: 'teamlogos/client_team_default_logo',\r\n    //                 resultText: 'Won',\r\n    //                 status: 'PLAYED'\r\n    //             },\r\n    //             {\r\n    //                 id: 'd16315d4-7f2d-427b-ae75-63a1ae82c0a8',\r\n    //                 isWinner: false,\r\n    //                 name: 'Aids Team',\r\n    //                 picture: 'teamlogos/client_team_default_logo',\r\n    //                 resultText: 'Lost',\r\n    //                 status: 'PLAYED'\r\n    //             }\r\n    //         ],\r\n    //         startTime: '2021-05-30',\r\n    //         state: 'SCORE_DONE',\r\n    //         tournamentRoundText: '1'\r\n    //     },\r\n    //     {\r\n    //         id: 19756,\r\n    //         nextMatchId: 19754,\r\n    //         participants: [\r\n    //             {\r\n    //                 id: 'd8b9f00a-0ffa-4527-8316-da701894768e',\r\n    //                 isWinner: false,\r\n    //                 name: 'Art of kill',\r\n    //                 picture: 'teamlogos/client_team_default_logo',\r\n    //                 resultText: '',\r\n    //                 status: null\r\n    //             }\r\n    //         ],\r\n    //         startTime: '2021-05-30',\r\n    //         state: 'RUNNING',\r\n    //         tournamentRoundText: '1'\r\n    //     },\r\n    //     {\r\n    //         id: 19757,\r\n    //         nextMatchId: 19753,\r\n    //         participants: [],\r\n    //         startTime: '2021-05-30',\r\n    //         state: 'SCHEDULED',\r\n    //         tournamentRoundText: '2'\r\n    //     },\r\n    //     {\r\n    //         id: 19758,\r\n    //         nextMatchId: 19757,\r\n    //         participants: [\r\n    //             {\r\n    //                 id: '9397971f-4b2f-44eb-a094-722eb286c59b',\r\n    //                 isWinner: false,\r\n    //                 name: 'Crazy Pepes',\r\n    //                 picture: 'teamlogos/client_team_default_logo',\r\n    //                 resultText: '',\r\n    //                 status: null\r\n    //             }\r\n    //         ],\r\n    //         startTime: '2021-05-30',\r\n    //         state: 'SCHEDULED',\r\n    //         tournamentRoundText: '1'\r\n    //     },\r\n    //     {\r\n    //         id: 19759,\r\n    //         nextMatchId: 19757,\r\n    //         participants: [\r\n    //             {\r\n    //                 id: '42fecd89-dc83-4821-80d3-718acb50a30c',\r\n    //                 isWinner: false,\r\n    //                 name: 'BLUEJAYS',\r\n    //                 picture: 'teamlogos/client_team_default_logo',\r\n    //                 resultText: '',\r\n    //                 status: null\r\n    //             },\r\n    //             {\r\n    //                 id: 'df01fe2c-18db-4190-9f9e-aa63364128fe',\r\n    //                 isWinner: false,\r\n    //                 name: 'Bosphorus',\r\n    //                 picture: 'teamlogos/r7zn4gr8eajivapvjyzd',\r\n    //                 resultText: '',\r\n    //                 status: null\r\n    //             }\r\n    //         ],\r\n    //         startTime: '2021-05-30',\r\n    //         state: 'SCHEDULED',\r\n    //         tournamentRoundText: '1'\r\n    //     }\r\n    // ]\r\n    const dispatch = useDispatch()\r\n    // dispatch(updateMatches([...matches]));\r\n\r\n    // const [width, height] = useWindowSize();\r\n    // const [width, height] = [1920, 1080];\r\n    // const finalWidth = Math.max(width - 50, 500);\r\n    // const finalHeight = Math.max(height - 100, 500);\r\n\r\n\r\n    const count = useSelector((state) => state.counter.value)\r\n    const matchArray = useSelector((state) => state.singles.matches);\r\n    const rrGroup = structuredClone(useSelector((state) => state.singles.roundRobinGroups));\r\n\r\n    const [showRR, setShowRR] = useState(true);\r\n    const [showChampionshipBracket, setShowChampionshipBracket] = useState(true);\r\n    const [showBBracket, setShowBBracket] = useState(true);\r\n    const [showCBracket, setShowCBracket] = useState(true);\r\n    const [showDBracket, setShowDpBracket] = useState(true);\r\n\r\n    const [matchList, setMatchList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // await getAllSinglesEntries()\r\n        async function getSingles() {\r\n            const res = await getAllSinglesEntries();\r\n        }\r\n\r\n        // const res =\r\n        // console.log(\"HELLO\")\r\n        // await axios.get(\"localhost:5000/getAllSinglesEntries\").then((res) => {\r\n        //     console.log(\"STUFF\")\r\n        //     console.log(res.data);\r\n        //     setMatchArray(structuredClone(res.data));\r\n        // })\r\n\r\n    }, [])\r\n    // console.log(matchArray)\r\n\r\n    useEffect(() => {\r\n        // alert(\"HELLO\")\r\n    }, [count])\r\n\r\n    async function getAllSinglesEntries() {\r\n        await axios.get(\"http://localhost:5000/getAllSinglesEntries\").then((res) => {\r\n            console.log(\"STUFF\")\r\n            console.log(res.data);\r\n            setMatchList(structuredClone(res.data))\r\n            // setMatchArray(structuredClone(res.data));\r\n        })\r\n    }\r\n\r\n    // async function test() {\r\n    //     // await axios.post(\"http://localhost:5000/createMatchArray\", {\"matches\": matchList}).then((res) => {\r\n    //     //     console.log(res.data);\r\n    //     // })\r\n    //     console.log(matchList);\r\n    //     let res = await axios.post(\"http://localhost:5000/createMatchArray\", {matchList: matchList});\r\n    //     console.log(res.data);\r\n    //     dispatch(updateChampionshipBracketMatches(res.data))\r\n    //     console.log(\"QUAKC\")\r\n    //     console.log(matchList.slice(matchList.length/2))\r\n    //     res = await axios.post(\"http://localhost:5000/createMatchArray\", {matchList: matchList.slice(matchList.length/2)});\r\n    //     console.log(res.data);\r\n    //     dispatch(updateConsolationBracketMatches(res.data))\r\n    // }\r\n\r\n    async function resetRoundRobinGroups() {\r\n        let res1 = await axios.get('http://localhost:5000/generateSinglesRoundRobinGroups');\r\n        let res2 = await axios.get('http://localhost:5000/getSinglesRoundRobinGroups');\r\n        dispatch(updateRoundRobinGroups(res2.data));\r\n    }\r\n\r\n    async function getRoundRobinData() {\r\n        let res2 = await axios.get('http://localhost:5000/getSinglesRoundRobinGroups');\r\n        dispatch(updateRoundRobinGroups(res2.data));\r\n        console.log(res2.data);\r\n    }\r\n\r\n    async function uploadRoundRobinData() {\r\n        let res = await axios.post(\"http://localhost:5000/uploadSinglesRoundRobinResults\", {matchData: rrGroup});\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"MATCH ARR CHANGE\")\r\n        console.log(matchArray)\r\n    }, [matchArray])\r\n\r\n    async function showMatches() {\r\n        console.log(matchArray);\r\n    }\r\n\r\n    async function generateChampionshipBracket() {\r\n        let res1 = await axios.post(\"http://localhost:5000/uploadSinglesRoundRobinResults\", {matchData: rrGroup});\r\n        let res = await axios.get(\"http://localhost:5000/generateSinglesChampionshipBracket\");\r\n        dispatch(updateChampionshipBracketMatches(res.data))\r\n        res = await axios.get(\"http://localhost:5000/generateSinglesBBracket\");\r\n        dispatch(updateBBracketMatches(res.data))\r\n        res = await axios.get(\"http://localhost:5000/generateSinglesCBracket\");\r\n        dispatch(updateCBracketMatches(res.data))\r\n        res = await axios.get(\"http://localhost:5000/generateSinglesDBracket\");\r\n        dispatch(updateDBracketMatches(res.data))\r\n        // console.log(res.data);\r\n    }\r\n\r\n    // async function enterResults() {\r\n    //     let temp = structuredClone(matchArray)\r\n    //     temp[0] = {\r\n    //         \"id\": 0,\r\n    //         \"name\": \"name\",\r\n    //         \"nextMatchId\": 32,\r\n    //         \"state\": \"SCHEDULED\",\r\n    //         \"participants\": [\r\n    //             {\r\n    //                 \"id\": 1,\r\n    //                 \"isWinner\": true,\r\n    //                 \"name\": \"Theodore Thayib\"\r\n    //             },\r\n    //             {\r\n    //                 \"id\": 64,\r\n    //                 \"isWinner\": false,\r\n    //                 \"name\": \"64\"\r\n    //             }\r\n    //         ]\r\n    //     }\r\n    //     temp[32] = {\r\n    //         id: 32,\r\n    //         name: \"name\",\r\n    //         // nextMatchId: midPoint + i,\r\n    //         nextMatchId: 48,\r\n    //         state: \"SCHEDULED\",\r\n    //         participants: [\r\n    //             {\r\n    //                 id: \"Theodore Thayib\",\r\n    //                 isWinner: false,\r\n    //                 name: \"TBD\",\r\n    //             },\r\n    //             {\r\n    //                 id: \"TBD\",\r\n    //                 isWinner: false,\r\n    //                 name: \"TBD\",\r\n    //             }\r\n    //         ]\r\n    //     }\r\n    //     dispatch(updateMatches(temp))\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            Hello!\r\n            {/*<button onClick={getAllSinglesEntries}>Load from DB</button>*/}\r\n            {/*<button onClick={test}>UPDATE MATCHES</button>*/}\r\n            {/*<button onClick={showMatches}>PRINT MATCHES</button>*/}\r\n            <br />\r\n            <button onClick={resetRoundRobinGroups}>Reset round robin groups</button>\r\n            <button onClick={getRoundRobinData}>Get RR Data from DB</button>\r\n            <button onClick={uploadRoundRobinData}>Upload RR Data to DB</button>\r\n            <br />\r\n            <button onClick={generateChampionshipBracket}>Generate Championship Bracket</button>\r\n            {/*<button onClick={enterResults}>ENTER RESULT MATCHES</button>*/}\r\n            <hr />\r\n            <h1>ROUND ROBIN</h1>\r\n            <SinglesRoundRobin />\r\n            <hr />\r\n            <h1>CHAMPIONSHIP BRACKET</h1>\r\n            <SinglesBracket/>\r\n            <div onClick={setShowCBracket(!showCBracket)}>\r\n            <hr />\r\n            <h1>C BRACKET</h1>\r\n            </div>\r\n            {showCBracket && (<><SinglesCBracket /></>)}\r\n\r\n            {/*<SinglesBBracket />*/}\r\n            {/*<SinglesConsolationBracket />*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Singles;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}