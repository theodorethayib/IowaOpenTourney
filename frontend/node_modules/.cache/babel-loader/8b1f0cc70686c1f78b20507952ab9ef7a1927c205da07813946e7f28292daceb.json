{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const singlesSlice = createSlice({\n  name: \"singles\",\n  initialState: {\n    championshipBracketMatches: [{\n      id: 1,\n      name: \"Semifinals\",\n      nextMatchId: 3,\n      tournamentRoundText: \"2\",\n      state: \"DONE\",\n      participants: [{\n        id: \"1\",\n        isWinner: true,\n        name: \"Theodore\"\n      }, {\n        id: \"4\",\n        isWinner: false,\n        name: \"Elvin\"\n      }]\n    }, {\n      id: 2,\n      name: \"Semifinals\",\n      nextMatchId: 3,\n      tournamentRoundText: \"2\",\n      state: \"DONE\",\n      \"participants\": [{\n        id: \"2\",\n        isWinner: true,\n        name: \"Daniel\"\n      }, {\n        id: \"3\",\n        isWinner: false,\n        name: \"Andrew\"\n      }]\n    }, {\n      id: 3,\n      name: \"Finals\",\n      nextMatchId: null,\n      tournamentRoundText: \"1\",\n      state: \"DONE\",\n      \"participants\": [{\n        id: \"1\",\n        isWinner: true,\n        name: \"Theodore\"\n      }, {\n        id: \"2\",\n        isWinner: false,\n        name: \"TBD\"\n      }]\n    }]\n  },\n  reducers: {\n    updateChampionshipBracketMatches: (state, action) => {\n      state.championshipBracketMatches = structuredClone(action.payload);\n    }\n  }\n});\nexport const {\n  updateChampionshipBracketMatches\n} = singlesSlice.actions;\nexport default singlesSlice.reducer;","map":{"version":3,"names":["createSlice","singlesSlice","name","initialState","championshipBracketMatches","id","nextMatchId","tournamentRoundText","state","participants","isWinner","reducers","updateChampionshipBracketMatches","action","structuredClone","payload","actions","reducer"],"sources":["C:/Users/theod/WebstormProjects/IowaOpenProgKnockout/frontend/src/features/singles/singlesSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nexport const singlesSlice = createSlice({\r\n    name: \"singles\",\r\n    initialState: {\r\n        championshipBracketMatches: [\r\n            {\r\n                id: 1,\r\n                name: \"Semifinals\",\r\n                nextMatchId: 3,\r\n                tournamentRoundText: \"2\",\r\n                state: \"DONE\",\r\n                participants: [\r\n                    {\r\n                        id: \"1\",\r\n                        isWinner: true,\r\n                        name: \"Theodore\",\r\n                    },\r\n                    {\r\n                        id: \"4\",\r\n                        isWinner: false,\r\n                        name: \"Elvin\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"Semifinals\",\r\n                nextMatchId: 3,\r\n                tournamentRoundText: \"2\",\r\n                state: \"DONE\",\r\n                \"participants\": [\r\n                    {\r\n                        id: \"2\",\r\n                        isWinner: true,\r\n                        name: \"Daniel\",\r\n                    },\r\n                    {\r\n                        id: \"3\",\r\n                        isWinner: false,\r\n                        name: \"Andrew\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                id: 3,\r\n                name: \"Finals\",\r\n                nextMatchId: null,\r\n                tournamentRoundText: \"1\",\r\n                state: \"DONE\",\r\n                \"participants\": [\r\n                    {\r\n                        id: \"1\",\r\n                        isWinner: true,\r\n                        name: \"Theodore\",\r\n                    },\r\n                    {\r\n                        id: \"2\",\r\n                        isWinner: false,\r\n                        name: \"TBD\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n\r\n    reducers: {\r\n        updateChampionshipBracketMatches: (state, action) => {\r\n            state.championshipBracketMatches = structuredClone(action.payload);\r\n        },\r\n    },\r\n});\r\n\r\nexport const {updateChampionshipBracketMatches} = singlesSlice.actions;\r\n\r\nexport default singlesSlice.reducer;\r\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACVC,0BAA0B,EAAE,CACxB;MACIC,EAAE,EAAE,CAAC;MACLH,IAAI,EAAE,YAAY;MAClBI,WAAW,EAAE,CAAC;MACdC,mBAAmB,EAAE,GAAG;MACxBC,KAAK,EAAE,MAAM;MACbC,YAAY,EAAE,CACV;QACIJ,EAAE,EAAE,GAAG;QACPK,QAAQ,EAAE,IAAI;QACdR,IAAI,EAAE;MACV,CAAC,EACD;QACIG,EAAE,EAAE,GAAG;QACPK,QAAQ,EAAE,KAAK;QACfR,IAAI,EAAE;MACV,CAAC;IAET,CAAC,EACD;MACIG,EAAE,EAAE,CAAC;MACLH,IAAI,EAAE,YAAY;MAClBI,WAAW,EAAE,CAAC;MACdC,mBAAmB,EAAE,GAAG;MACxBC,KAAK,EAAE,MAAM;MACb,cAAc,EAAE,CACZ;QACIH,EAAE,EAAE,GAAG;QACPK,QAAQ,EAAE,IAAI;QACdR,IAAI,EAAE;MACV,CAAC,EACD;QACIG,EAAE,EAAE,GAAG;QACPK,QAAQ,EAAE,KAAK;QACfR,IAAI,EAAE;MACV,CAAC;IAET,CAAC,EACD;MACIG,EAAE,EAAE,CAAC;MACLH,IAAI,EAAE,QAAQ;MACdI,WAAW,EAAE,IAAI;MACjBC,mBAAmB,EAAE,GAAG;MACxBC,KAAK,EAAE,MAAM;MACb,cAAc,EAAE,CACZ;QACIH,EAAE,EAAE,GAAG;QACPK,QAAQ,EAAE,IAAI;QACdR,IAAI,EAAE;MACV,CAAC,EACD;QACIG,EAAE,EAAE,GAAG;QACPK,QAAQ,EAAE,KAAK;QACfR,IAAI,EAAE;MACV,CAAC;IAET,CAAC;EAET,CAAC;EAEDS,QAAQ,EAAE;IACNC,gCAAgC,EAAEA,CAACJ,KAAK,EAAEK,MAAM,KAAK;MACjDL,KAAK,CAACJ,0BAA0B,GAAGU,eAAe,CAACD,MAAM,CAACE,OAAO,CAAC;IACtE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACH;AAAgC,CAAC,GAAGX,YAAY,CAACe,OAAO;AAEtE,eAAef,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}