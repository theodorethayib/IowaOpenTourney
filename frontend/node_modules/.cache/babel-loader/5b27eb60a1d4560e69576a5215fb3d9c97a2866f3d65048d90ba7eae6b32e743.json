{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theod\\\\WebstormProjects\\\\IowaOpenProgKnockout\\\\frontend\\\\src\\\\Views\\\\Components\\\\SinglesCBracket.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, Component, useEffect } from \"react\";\nimport { SingleEliminationBracket, DoubleEliminationBracket, Match, MATCH_STATES, SVGViewer } from '@g-loot/react-tournament-brackets';\nimport defaultTheme from \"../Themes/defaultTheme\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateBBracketMatches, updateCBracketMatches } from \"../../features/singles/singlesSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SinglesCBracket({}) {\n  _s();\n  const dispatch = useDispatch();\n  const matchArray = structuredClone(useSelector(state => state.singles.cBracketMatches));\n  const dMatchArray = structuredClone(useSelector(state => state.singles.dBracketMatches));\n\n  // const [width, height] = [1920, 1080];\n  // const finalWidth = Math.max(width - 50, 500);\n  // const finalHeight = Math.max(height - 100, 500);\n  const windowSize = useRef([window.innerWidth, window.innerHeight]);\n  const finalWidth = Math.max(windowSize.current[0] - 50, 500);\n  // const finalHeight = Math.max(windowSize.current[1] - 100, 500);\n  const finalHeight = 100000000;\n  const [dispMatchArray, setDispMatchArray] = useState(matchArray);\n  const [doDisp, setDoDisp] = useState(true);\n  // useEffect(() => {\n  //     // console.log(\"HELLO THERE\")\n  //     setDispMatchArray(structuredClone(matchArray));\n  // }, [matchArray])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"console.log(matchArray)\", matchArray.length > 0 && doDisp && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matchArray.length, /*#__PURE__*/_jsxDEV(SingleEliminationBracket, {\n        matches: matchArray,\n        options: {\n          style: {\n            roundHeader: {\n              backgroundColor: '#AAA'\n            },\n            connectorColor: '#FF8C00',\n            connectorColorHighlight: '#000'\n          }\n        },\n        theme: defaultTheme,\n        svgWrapper: ({\n          children,\n          ...props\n        }) => /*#__PURE__*/_jsxDEV(SVGViewer\n        // background=\"#FFF\"\n        // SVGBackground=\"#FFF\"\n        , {\n          width: finalWidth,\n          height: finalHeight,\n          ...props,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this),\n        matchComponent: ({\n          match,\n          onMatchClick,\n          onPartyClick,\n          onMouseEnter,\n          onMouseLeave,\n          topParty,\n          bottomParty,\n          topWon,\n          bottomWon,\n          topHovered,\n          bottomHovered,\n          topText,\n          bottomText,\n          connectorColor,\n          computedStyles,\n          teamNameFallback,\n          resultFallback\n        }) => {\n          var _topParty$resultText, _bottomParty$resultTe;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-around',\n              color: '#000',\n              width: '100%',\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onMouseEnter: () => onMouseEnter(topParty.id),\n              style: {\n                display: 'flex'\n              },\n              onMouseUp: async () => {\n                let updateMatchBracketObj = {};\n                let insertMatchArr = [];\n                // alert(\"TEST\")\n                let num = matchArray.length + 1;\n                console.log(\"NUM IS: \" + num);\n                let matchIdMidValueIncr = num / 4 + num / 2;\n                console.log(\"MATCH ID INCR IS: \" + matchIdMidValueIncr);\n                let num2 = num / 2;\n                let tempCompArr = [num];\n                let tempMidValueArr = [num2];\n                for (let i = num; i > 2; i /= 2) {\n                  if (match.id < num) {\n                    break;\n                  }\n                  num += i / 2;\n                  tempCompArr.push(num);\n                  num2 += matchIdMidValueIncr;\n                  tempMidValueArr.push(num2);\n                  matchIdMidValueIncr /= 2;\n                }\n                console.log(\"NUM IS: \" + num);\n                console.log(\"MATCH ID INCR IS: \" + matchIdMidValueIncr);\n                console.log(\"NUM 2 is: \" + num2);\n                // console.log(\"COMP ARR: \" + tempCompArr)\n                // console.log(\"MID ARR: \" + tempMidValueArr)\n                // console.log(\"COMP: \" + num);\n                // console.log(\"MID: \" + num2);\n                // console.log(match);\n                // console.log(matchArray)\n                let temp = structuredClone(matchArray);\n                let dBracket = structuredClone(dMatchArray);\n                console.log(\"TEMP ARR\");\n                console.log(temp);\n                temp[match.id - temp[0].id] = {\n                  \"id\": match.id,\n                  \"name\": \"name\",\n                  \"nextMatchId\": match.nextMatchId,\n                  \"state\": \"SCHEDULED\",\n                  \"participants\": [{\n                    \"id\": topParty.id,\n                    \"isWinner\": true,\n                    \"name\": topParty.name\n                  }, {\n                    \"id\": bottomParty.id,\n                    \"isWinner\": false,\n                    \"name\": bottomParty.name\n                  }]\n                };\n                updateMatchBracketObj.matchResult = [\"SinglesCBracket\", true, false, match.id - temp[0].id];\n                console.log(\"SDFSDFSDF\");\n                console.log();\n                console.log(temp[match.id - temp[0].id]);\n                // updateMatchBracketObj.matchResult = [\"SinglesCBracket\", true, false, match.id - temp[0].id]\n                console.log(\"BLA BLA \" + match.tournamentRoundText);\n                if (match.tournamentRoundText.toString() === \"2\") {\n                  console.log(\"ROUND 2\");\n                  if (match.id < num2) {\n                    insertMatchArr.push([\"SinglesDBracket\", bottomParty.id, bottomParty.name, dBracket[match.nextMatchId - dBracket[0].id].participants[1].id, dBracket[match.nextMatchId - dBracket[0].id].participants[1].name, match.nextMatchId]);\n                  } else {\n                    insertMatchArr.push([\"SinglesDBracket\", dBracket[match.nextMatchId - dBracket[0].id].participants[0].id, dBracket[match.nextMatchId - dBracket[0].id].participants[0].name, bottomParty.id, bottomParty.name, match.nextMatchId]);\n                  }\n                  dBracket[match.nextMatchId - dBracket[0].id] = {\n                    id: match.nextMatchId,\n                    name: \"name\",\n                    // nextMatchId: midPoint + i,\n                    nextMatchId: temp[match.nextMatchId].nextMatchId,\n                    state: \"SCHEDULED\",\n                    participants: match.id < num2 ? [{\n                      id: bottomParty.id,\n                      isWinner: false,\n                      name: bottomParty.name\n                    }, {\n                      id: dBracket[match.nextMatchId - dBracket[0].id].participants[1].id,\n                      isWinner: false,\n                      name: dBracket[match.nextMatchId - dBracket[0].id].participants[1].name\n                    }] : [{\n                      id: dBracket[match.nextMatchId - dBracket[0].id].participants[0].id,\n                      isWinner: false,\n                      name: dBracket[match.nextMatchId - dBracket[0].id].participants[0].name\n                    }, {\n                      id: bottomParty.id,\n                      isWinner: false,\n                      name: bottomParty.name\n                    }],\n                    tournamentRoundText: temp[match.nextMatchId].tournamentRoundText\n                  };\n                }\n                temp[match.nextMatchId - temp[0].id] = {\n                  id: match.nextMatchId,\n                  name: \"name\",\n                  // nextMatchId: midPoint + i,\n                  nextMatchId: temp[match.nextMatchId - temp[0].id].nextMatchId,\n                  state: \"SCHEDULED\",\n                  participants: match.id < num2 ? [{\n                    id: topParty.id,\n                    isWinner: false,\n                    name: topParty.name\n                  }, {\n                    id: temp[match.nextMatchId - temp[0].id].participants[1].id,\n                    isWinner: false,\n                    name: temp[match.nextMatchId - temp[0].id].participants[1].name\n                  }] : [{\n                    id: temp[match.nextMatchId - temp[0].id].participants[0].id,\n                    isWinner: false,\n                    name: temp[match.nextMatchId - temp[0].id].participants[0].name\n                  }, {\n                    id: topParty.id,\n                    isWinner: false,\n                    name: topParty.name\n                  }],\n                  tournamentRoundText: temp[match.nextMatchId - temp[0].id].tournamentRoundText\n                };\n                setDispMatchArray(temp);\n                if (match.id < num2) {\n                  console.log(\"TOP1\");\n                  insertMatchArr.push([\"singlesCBracket\", topParty.id, topParty.name, temp[match.nextMatchId - temp[0].id].participants[1].id, temp[match.nextMatchId - temp[0].id].participants[1].name, match.nextMatchId]);\n                } else {\n                  console.log(\"BOTTOM1\");\n                  insertMatchArr.push([\"singlesCBracket\", temp[match.nextMatchId - temp[0].id].participants[0].id, temp[match.nextMatchId - temp[0].id].participants[0].name, topParty.id, topParty.name, match.nextMatchId]);\n                }\n                updateMatchBracketObj.nextMatch = insertMatchArr;\n                let res = await axios.post(\"http://localhost:5000/updateMatchBracket\", updateMatchBracketObj);\n                console.log(res);\n                dispatch(updateCBracketMatches(temp));\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: topParty.name || teamNameFallback\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: (_topParty$resultText = topParty.resultText) !== null && _topParty$resultText !== void 0 ? _topParty$resultText : resultFallback(topParty)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '1px',\n                width: '100%',\n                background: '#FF8C00'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onMouseEnter: () => onMouseEnter(bottomParty.id),\n              style: {\n                display: 'flex'\n              },\n              onMouseUp: async () => {\n                // alert(\"TEST\")\n                let updateMatchBracketObj = {};\n                let insertMatchArr = [];\n                let num = matchArray.length + 1;\n                let matchIdMidValueIncr = num / 4 + num / 2;\n                let num2 = num / 2;\n                let tempCompArr = [num];\n                let tempMidValueArr = [num2];\n                for (let i = num; i > 2; i /= 2) {\n                  if (match.id < num) {\n                    break;\n                  }\n                  num += i / 2;\n                  tempCompArr.push(num);\n                  num2 += matchIdMidValueIncr;\n                  tempMidValueArr.push(num2);\n                  matchIdMidValueIncr /= 2;\n                }\n                let temp = structuredClone(matchArray);\n                let dBracket = structuredClone(dMatchArray);\n                console.log(\"TEMP ARR\");\n                console.log(temp);\n                temp[match.id - temp[0].id] = {\n                  \"id\": match.id,\n                  \"name\": \"name\",\n                  \"nextMatchId\": match.nextMatchId,\n                  \"state\": \"SCHEDULED\",\n                  \"participants\": [{\n                    \"id\": topParty.id,\n                    \"isWinner\": false,\n                    \"name\": topParty.name\n                  }, {\n                    \"id\": bottomParty.id,\n                    \"isWinner\": true,\n                    \"name\": bottomParty.name\n                  }]\n                };\n                updateMatchBracketObj.matchResult = [\"SinglesCBracket\", false, true, match.id];\n                if (match.tournamentRoundText.toString() === \"2\") {\n                  if (match.id < num2) {\n                    insertMatchArr.push([\"SinglesDBracket\", topParty.id, topParty.name, dBracket[match.nextMatchId - dBracket[0].id].participants[1].id, dBracket[match.nextMatchId - dBracket[0].id].participants[1].name, match.nextMatchId]);\n                  } else {\n                    insertMatchArr.push([\"SinglesDBracket\", dBracket[match.nextMatchId - dBracket[0].id].participants[0].id, dBracket[match.nextMatchId - dBracket[0].id].participants[0].name, topParty.id, topParty.name, match.nextMatchId]);\n                  }\n                  dBracket[match.nextMatchId - dBracket[0].id] = {\n                    id: match.nextMatchId,\n                    name: \"name\",\n                    // nextMatchId: midPoint + i,\n                    nextMatchId: temp[match.nextMatchId].nextMatchId,\n                    state: \"SCHEDULED\",\n                    participants: match.id < num2 ? [{\n                      id: topParty.id,\n                      isWinner: false,\n                      name: topParty.name\n                    }, {\n                      id: dBracket[match.nextMatchId - dBracket[0].id].participants[1].id,\n                      isWinner: false,\n                      name: dBracket[match.nextMatchId - dBracket[0].id].participants[1].name\n                    }] : [{\n                      id: dBracket[match.nextMatchId - dBracket[0].id].participants[0].id,\n                      isWinner: false,\n                      name: dBracket[match.nextMatchId - dBracket[0].id].participants[0].name\n                    }, {\n                      id: topParty.id,\n                      isWinner: false,\n                      name: topParty.name\n                    }],\n                    tournamentRoundText: temp[match.nextMatchId].tournamentRoundText\n                  };\n                }\n                temp[match.nextMatchId - temp[0].id] = {\n                  id: match.nextMatchId,\n                  name: \"name\",\n                  // nextMatchId: midPoint + i,\n                  nextMatchId: temp[match.nextMatchId - temp[0].id].nextMatchId,\n                  state: \"SCHEDULED\",\n                  participants: match.id < num2 ? [{\n                    id: bottomParty.id,\n                    isWinner: false,\n                    name: bottomParty.name\n                  }, {\n                    id: temp[match.nextMatchId - temp[0].id].participants[1].id,\n                    isWinner: false,\n                    name: temp[match.nextMatchId - temp[0].id].participants[1].name\n                  }] : [{\n                    id: temp[match.nextMatchId - temp[0].id].participants[0].id,\n                    isWinner: false,\n                    name: temp[match.nextMatchId - temp[0].id].participants[0].name\n                  }, {\n                    id: bottomParty.id,\n                    isWinner: false,\n                    name: bottomParty.name\n                  }],\n                  tournamentRoundText: temp[match.nextMatchId - temp[0].id].tournamentRoundText\n                };\n                if (match.id < num2) {\n                  console.log(\"TOP234\");\n                  console.log(bottomParty.name);\n                  insertMatchArr.push([\"singlesCBracket\", bottomParty.id, bottomParty.name, temp[match.nextMatchId - temp[0].id].participants[1].id, temp[match.nextMatchId - temp[0].id].participants[1].name, match.nextMatchId]);\n                } else {\n                  console.log(\"BOTTOM234\");\n                  insertMatchArr.push([\"singlesCBracket\", temp[match.nextMatchId - temp[0].id].participants[0].id, temp[match.nextMatchId - temp[0].id].participants[0].name, bottomParty.id, bottomParty.name, match.nextMatchId]);\n                }\n                updateMatchBracketObj.nextMatch = insertMatchArr;\n                let res = await axios.post(\"http://localhost:5000/updateMatchBracket\", updateMatchBracketObj);\n                console.log(res);\n                setDispMatchArray(temp);\n                dispatch(updateCBracketMatches(temp));\n                // let res = await axios.post(\"http://localhost:5000/\", {});\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: bottomParty.name || teamNameFallback\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: (_bottomParty$resultTe = bottomParty.resultText) !== null && _bottomParty$resultTe !== void 0 ? _bottomParty$resultTe : resultFallback(topParty)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(SinglesCBracket, \"AcJMOxIMVMzb6tlOo+eAnaSjLHU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = SinglesCBracket;\nexport default SinglesCBracket;\nvar _c;\n$RefreshReg$(_c, \"SinglesCBracket\");","map":{"version":3,"names":["React","useRef","useState","Component","useEffect","SingleEliminationBracket","DoubleEliminationBracket","Match","MATCH_STATES","SVGViewer","defaultTheme","useSelector","useDispatch","updateBBracketMatches","updateCBracketMatches","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SinglesCBracket","_s","dispatch","matchArray","structuredClone","state","singles","cBracketMatches","dMatchArray","dBracketMatches","windowSize","window","innerWidth","innerHeight","finalWidth","Math","max","current","finalHeight","dispMatchArray","setDispMatchArray","doDisp","setDoDisp","children","length","matches","options","style","roundHeader","backgroundColor","connectorColor","connectorColorHighlight","theme","svgWrapper","props","width","height","fileName","_jsxFileName","lineNumber","columnNumber","matchComponent","match","onMatchClick","onPartyClick","onMouseEnter","onMouseLeave","topParty","bottomParty","topWon","bottomWon","topHovered","bottomHovered","topText","bottomText","computedStyles","teamNameFallback","resultFallback","_topParty$resultText","_bottomParty$resultTe","display","flexDirection","justifyContent","color","id","onMouseUp","updateMatchBracketObj","insertMatchArr","num","console","log","matchIdMidValueIncr","num2","tempCompArr","tempMidValueArr","i","push","temp","dBracket","nextMatchId","name","matchResult","tournamentRoundText","toString","participants","isWinner","nextMatch","res","post","resultText","background","_c","$RefreshReg$"],"sources":["C:/Users/theod/WebstormProjects/IowaOpenProgKnockout/frontend/src/Views/Components/SinglesCBracket.jsx"],"sourcesContent":["import React, {useRef, useState, Component, useEffect} from \"react\";\r\nimport {\r\n    SingleEliminationBracket,\r\n    DoubleEliminationBracket,\r\n    Match,\r\n    MATCH_STATES,\r\n    SVGViewer\r\n} from '@g-loot/react-tournament-brackets';\r\nimport defaultTheme from \"../Themes/defaultTheme\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {updateBBracketMatches, updateCBracketMatches} from \"../../features/singles/singlesSlice\";\r\nimport axios from \"axios\";\r\n\r\nfunction SinglesCBracket({}) {\r\n    const dispatch = useDispatch()\r\n    const matchArray = structuredClone(useSelector((state) => state.singles.cBracketMatches));\r\n    const dMatchArray = structuredClone(useSelector((state) => state.singles.dBracketMatches));\r\n\r\n    // const [width, height] = [1920, 1080];\r\n    // const finalWidth = Math.max(width - 50, 500);\r\n    // const finalHeight = Math.max(height - 100, 500);\r\n    const windowSize = useRef([window.innerWidth, window.innerHeight]);\r\n    const finalWidth = Math.max(windowSize.current[0] - 50, 500);\r\n    // const finalHeight = Math.max(windowSize.current[1] - 100, 500);\r\n    const finalHeight = 100000000;\r\n\r\n    const [dispMatchArray, setDispMatchArray] = useState(matchArray);\r\n    const [doDisp, setDoDisp] = useState(true);\r\n    // useEffect(() => {\r\n    //     // console.log(\"HELLO THERE\")\r\n    //     setDispMatchArray(structuredClone(matchArray));\r\n    // }, [matchArray])\r\n\r\n\r\n    return (\r\n        <div>\r\n            console.log(matchArray)\r\n            {(matchArray.length > 0 && doDisp) && (<>{matchArray.length}<SingleEliminationBracket\r\n                matches={matchArray}\r\n                options={{\r\n                    style: {\r\n                        roundHeader: {backgroundColor: '#AAA'},\r\n                        connectorColor: '#FF8C00',\r\n                        connectorColorHighlight: '#000',\r\n                    },\r\n                }}\r\n                theme={defaultTheme}\r\n                svgWrapper={({children, ...props}) => (\r\n                    <SVGViewer\r\n                        // background=\"#FFF\"\r\n                        // SVGBackground=\"#FFF\"\r\n                        width={finalWidth}\r\n                        height={finalHeight}\r\n                        {...props}\r\n                    >\r\n                        {children}\r\n                    </SVGViewer>\r\n                )}\r\n                matchComponent={({\r\n                                     match,\r\n                                     onMatchClick,\r\n                                     onPartyClick,\r\n                                     onMouseEnter,\r\n                                     onMouseLeave,\r\n                                     topParty,\r\n                                     bottomParty,\r\n                                     topWon,\r\n                                     bottomWon,\r\n                                     topHovered,\r\n                                     bottomHovered,\r\n                                     topText,\r\n                                     bottomText,\r\n                                     connectorColor,\r\n                                     computedStyles,\r\n                                     teamNameFallback,\r\n                                     resultFallback,\r\n                                 }) => (\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'space-around',\r\n                            color: '#000',\r\n                            width: '100%',\r\n                            height: '100%',\r\n                        }}\r\n\r\n                    >\r\n                        <div\r\n                            onMouseEnter={() => onMouseEnter(topParty.id)}\r\n                            style={{display: 'flex'}}\r\n                            onMouseUp={async () => {\r\n                                let updateMatchBracketObj = {};\r\n                                let insertMatchArr = [];\r\n                                // alert(\"TEST\")\r\n                                let num = ((matchArray.length) + 1);\r\n                                console.log(\"NUM IS: \" + num)\r\n                                let matchIdMidValueIncr = num / 4 + num / 2;\r\n                                console.log(\"MATCH ID INCR IS: \" + matchIdMidValueIncr);\r\n                                let num2 = num / 2\r\n                                let tempCompArr = [num]\r\n                                let tempMidValueArr = [num2]\r\n                                for (let i = num; i > 2; i /= 2) {\r\n                                    if (match.id < num) {\r\n                                        break;\r\n                                    }\r\n                                    num += (i / 2);\r\n                                    tempCompArr.push(num);\r\n                                    num2 += matchIdMidValueIncr\r\n                                    tempMidValueArr.push(num2)\r\n                                    matchIdMidValueIncr /= 2;\r\n\r\n                                }\r\n                                console.log(\"NUM IS: \" + num)\r\n                                console.log(\"MATCH ID INCR IS: \" + matchIdMidValueIncr);\r\n                                console.log(\"NUM 2 is: \" + num2)\r\n                                // console.log(\"COMP ARR: \" + tempCompArr)\r\n                                // console.log(\"MID ARR: \" + tempMidValueArr)\r\n                                // console.log(\"COMP: \" + num);\r\n                                // console.log(\"MID: \" + num2);\r\n                                // console.log(match);\r\n                                // console.log(matchArray)\r\n                                let temp = structuredClone(matchArray)\r\n                                let dBracket = structuredClone(dMatchArray)\r\n                                console.log(\"TEMP ARR\")\r\n                                console.log(temp)\r\n                                temp[match.id - temp[0].id] = {\r\n                                    \"id\": match.id,\r\n                                    \"name\": \"name\",\r\n                                    \"nextMatchId\": match.nextMatchId,\r\n                                    \"state\": \"SCHEDULED\",\r\n                                    \"participants\": [\r\n                                        {\r\n                                            \"id\": topParty.id,\r\n                                            \"isWinner\": true,\r\n                                            \"name\": topParty.name\r\n                                        },\r\n                                        {\r\n                                            \"id\": bottomParty.id,\r\n                                            \"isWinner\": false,\r\n                                            \"name\": bottomParty.name\r\n                                        }\r\n                                    ]\r\n                                }\r\n                                updateMatchBracketObj.matchResult = [\"SinglesCBracket\", true, false, match.id - temp[0].id]\r\n                                console.log(\"SDFSDFSDF\")\r\n                                console.log()\r\n                                console.log(temp[match.id - temp[0].id])\r\n                                // updateMatchBracketObj.matchResult = [\"SinglesCBracket\", true, false, match.id - temp[0].id]\r\n                                console.log(\"BLA BLA \" + match.tournamentRoundText)\r\n                                if (match.tournamentRoundText.toString() === \"2\") {\r\n                                    console.log(\"ROUND 2\")\r\n                                    if (match.id < num2) {\r\n                                        insertMatchArr.push([\"SinglesDBracket\", bottomParty.id, bottomParty.name, dBracket[match.nextMatchId - dBracket[0].id].participants[1].id, dBracket[match.nextMatchId - dBracket[0].id].participants[1].name, match.nextMatchId])\r\n                                    } else {\r\n                                        insertMatchArr.push([\"SinglesDBracket\", dBracket[match.nextMatchId - dBracket[0].id].participants[0].id, dBracket[match.nextMatchId - dBracket[0].id].participants[0].name, bottomParty.id, bottomParty.name, match.nextMatchId])\r\n                                    }\r\n                                    dBracket[match.nextMatchId - dBracket[0].id] = {\r\n                                        id: match.nextMatchId,\r\n                                        name: \"name\",\r\n                                        // nextMatchId: midPoint + i,\r\n                                        nextMatchId: temp[match.nextMatchId].nextMatchId,\r\n                                        state: \"SCHEDULED\",\r\n                                        participants: (match.id < num2 ? [\r\n                                            {\r\n                                                id: bottomParty.id,\r\n                                                isWinner: false,\r\n                                                name: bottomParty.name,\r\n                                            },\r\n                                            {\r\n                                                id: dBracket[match.nextMatchId - dBracket[0].id].participants[1].id,\r\n                                                isWinner: false,\r\n                                                name: dBracket[match.nextMatchId - dBracket[0].id].participants[1].name,\r\n                                            }\r\n\r\n\r\n                                        ] : [\r\n                                            {\r\n                                                id: dBracket[match.nextMatchId - dBracket[0].id].participants[0].id,\r\n                                                isWinner: false,\r\n                                                name: dBracket[match.nextMatchId - dBracket[0].id].participants[0].name,\r\n                                            },\r\n                                            {\r\n                                                id: bottomParty.id,\r\n                                                isWinner: false,\r\n                                                name: bottomParty.name,\r\n                                            }\r\n                                        ]),\r\n                                        tournamentRoundText: temp[match.nextMatchId].tournamentRoundText\r\n                                    }\r\n                                }\r\n\r\n                                temp[match.nextMatchId - temp[0].id] = {\r\n                                    id: match.nextMatchId,\r\n                                    name: \"name\",\r\n                                    // nextMatchId: midPoint + i,\r\n                                    nextMatchId: temp[match.nextMatchId - temp[0].id].nextMatchId,\r\n                                    state: \"SCHEDULED\",\r\n                                    participants: (match.id < num2 ? [\r\n                                        {\r\n                                            id: topParty.id,\r\n                                            isWinner: false,\r\n                                            name: topParty.name,\r\n                                        },\r\n                                        {\r\n                                            id: temp[match.nextMatchId - temp[0].id].participants[1].id,\r\n                                            isWinner: false,\r\n                                            name: temp[match.nextMatchId - temp[0].id].participants[1].name,\r\n                                        }\r\n                                    ] : [\r\n                                        {\r\n                                            id: temp[match.nextMatchId - temp[0].id].participants[0].id,\r\n                                            isWinner: false,\r\n                                            name: temp[match.nextMatchId - temp[0].id].participants[0].name,\r\n                                        },\r\n                                        {\r\n                                            id: topParty.id,\r\n                                            isWinner: false,\r\n                                            name: topParty.name,\r\n                                        }\r\n                                    ]),\r\n                                    tournamentRoundText: temp[match.nextMatchId - temp[0].id].tournamentRoundText\r\n                                }\r\n                                setDispMatchArray(temp);\r\n                                if (match.id < num2) {\r\n                                    console.log(\"TOP1\")\r\n                                    insertMatchArr.push([\"singlesCBracket\", topParty.id, topParty.name, temp[match.nextMatchId - temp[0].id].participants[1].id, temp[match.nextMatchId - temp[0].id].participants[1].name, match.nextMatchId])\r\n                                } else {\r\n                                    console.log(\"BOTTOM1\")\r\n                                    insertMatchArr.push([\"singlesCBracket\", temp[match.nextMatchId - temp[0].id].participants[0].id, temp[match.nextMatchId - temp[0].id].participants[0].name, topParty.id, topParty.name, match.nextMatchId])\r\n                                }\r\n                                updateMatchBracketObj.nextMatch = insertMatchArr;\r\n\r\n                                let res = await axios.post(\"http://localhost:5000/updateMatchBracket\", updateMatchBracketObj);\r\n                                console.log(res);\r\n\r\n                                dispatch(updateCBracketMatches(temp))\r\n                            }}\r\n                        >\r\n                            <div>{topParty.name || teamNameFallback}</div>\r\n                            <div>{topParty.resultText ?? resultFallback(topParty)}</div>\r\n                        </div>\r\n                        <div\r\n                            style={{height: '1px', width: '100%', background: '#FF8C00'}}\r\n                        />\r\n                        <div\r\n                            onMouseEnter={() => onMouseEnter(bottomParty.id)}\r\n                            style={{display: 'flex'}}\r\n                            onMouseUp={async () => {\r\n\r\n                                // alert(\"TEST\")\r\n                                let updateMatchBracketObj = {};\r\n                                let insertMatchArr = [];\r\n                                let num = ((matchArray.length) + 1);\r\n\r\n                                let matchIdMidValueIncr = num / 4 + num / 2;\r\n                                let num2 = num / 2\r\n                                let tempCompArr = [num]\r\n                                let tempMidValueArr = [num2]\r\n                                for (let i = num; i > 2; i /= 2) {\r\n                                    if (match.id < num) {\r\n                                        break;\r\n                                    }\r\n                                    num += (i / 2);\r\n                                    tempCompArr.push(num);\r\n                                    num2 += matchIdMidValueIncr\r\n                                    tempMidValueArr.push(num2)\r\n                                    matchIdMidValueIncr /= 2;\r\n\r\n                                }\r\n                                let temp = structuredClone(matchArray)\r\n                                let dBracket = structuredClone(dMatchArray)\r\n                                console.log(\"TEMP ARR\")\r\n                                console.log(temp)\r\n                                temp[match.id - temp[0].id] = {\r\n                                    \"id\": match.id,\r\n                                    \"name\": \"name\",\r\n                                    \"nextMatchId\": match.nextMatchId,\r\n                                    \"state\": \"SCHEDULED\",\r\n                                    \"participants\": [\r\n                                        {\r\n                                            \"id\": topParty.id,\r\n                                            \"isWinner\": false,\r\n                                            \"name\": topParty.name\r\n                                        },\r\n                                        {\r\n                                            \"id\": bottomParty.id,\r\n                                            \"isWinner\": true,\r\n                                            \"name\": bottomParty.name\r\n                                        }\r\n                                    ]\r\n                                }\r\n                                updateMatchBracketObj.matchResult = [\"SinglesCBracket\", false, true, match.id]\r\n                                if (match.tournamentRoundText.toString() === \"2\") {\r\n                                    if (match.id < num2) {\r\n                                        insertMatchArr.push([\"SinglesDBracket\", topParty.id, topParty.name, dBracket[match.nextMatchId - dBracket[0].id].participants[1].id, dBracket[match.nextMatchId - dBracket[0].id].participants[1].name, match.nextMatchId])\r\n                                    } else {\r\n                                        insertMatchArr.push([\"SinglesDBracket\", dBracket[match.nextMatchId - dBracket[0].id].participants[0].id, dBracket[match.nextMatchId - dBracket[0].id].participants[0].name, topParty.id, topParty.name, match.nextMatchId])\r\n                                    }\r\n                                    dBracket[match.nextMatchId - dBracket[0].id] = {\r\n                                        id: match.nextMatchId,\r\n                                        name: \"name\",\r\n                                        // nextMatchId: midPoint + i,\r\n                                        nextMatchId: temp[match.nextMatchId].nextMatchId,\r\n                                        state: \"SCHEDULED\",\r\n                                        participants: (match.id < num2 ? [\r\n                                            {\r\n                                                id: topParty.id,\r\n                                                isWinner: false,\r\n                                                name: topParty.name,\r\n                                            },\r\n                                            {\r\n                                                id: dBracket[match.nextMatchId - dBracket[0].id].participants[1].id,\r\n                                                isWinner: false,\r\n                                                name: dBracket[match.nextMatchId - dBracket[0].id].participants[1].name,\r\n                                            }\r\n\r\n\r\n                                        ] : [\r\n                                            {\r\n                                                id: dBracket[match.nextMatchId - dBracket[0].id].participants[0].id,\r\n                                                isWinner: false,\r\n                                                name: dBracket[match.nextMatchId - dBracket[0].id].participants[0].name,\r\n                                            },\r\n                                            {\r\n                                                id: topParty.id,\r\n                                                isWinner: false,\r\n                                                name: topParty.name,\r\n                                            }\r\n                                        ]),\r\n                                        tournamentRoundText: temp[match.nextMatchId].tournamentRoundText\r\n                                    }\r\n                                }\r\n                                temp[match.nextMatchId - temp[0].id] = {\r\n                                    id: match.nextMatchId,\r\n                                    name: \"name\",\r\n                                    // nextMatchId: midPoint + i,\r\n                                    nextMatchId: temp[match.nextMatchId - temp[0].id].nextMatchId,\r\n                                    state: \"SCHEDULED\",\r\n                                    participants: (match.id < num2 ? [\r\n                                        {\r\n                                            id: bottomParty.id,\r\n                                            isWinner: false,\r\n                                            name: bottomParty.name,\r\n                                        },\r\n                                        {\r\n                                            id: temp[match.nextMatchId - temp[0].id].participants[1].id,\r\n                                            isWinner: false,\r\n                                            name: temp[match.nextMatchId - temp[0].id].participants[1].name,\r\n                                        }\r\n                                    ] : [\r\n                                        {\r\n                                            id: temp[match.nextMatchId - temp[0].id].participants[0].id,\r\n                                            isWinner: false,\r\n                                            name: temp[match.nextMatchId - temp[0].id].participants[0].name,\r\n                                        },\r\n                                        {\r\n                                            id: bottomParty.id,\r\n                                            isWinner: false,\r\n                                            name: bottomParty.name,\r\n                                        }\r\n                                    ]),\r\n                                    tournamentRoundText: temp[match.nextMatchId - temp[0].id].tournamentRoundText\r\n                                }\r\n                                if (match.id < num2) {\r\n                                    console.log(\"TOP234\")\r\n                                    console.log(bottomParty.name)\r\n                                    insertMatchArr.push([\"singlesCBracket\", bottomParty.id, bottomParty.name, temp[match.nextMatchId - temp[0].id].participants[1].id, temp[match.nextMatchId - temp[0].id].participants[1].name, match.nextMatchId])\r\n                                } else {\r\n                                    console.log(\"BOTTOM234\")\r\n                                    insertMatchArr.push([\"singlesCBracket\", temp[match.nextMatchId - temp[0].id].participants[0].id, temp[match.nextMatchId - temp[0].id].participants[0].name, bottomParty.id, bottomParty.name, match.nextMatchId])\r\n                                }\r\n                                updateMatchBracketObj.nextMatch = insertMatchArr;\r\n\r\n                                let res = await axios.post(\"http://localhost:5000/updateMatchBracket\", updateMatchBracketObj);\r\n                                console.log(res);\r\n                                setDispMatchArray(temp);\r\n                                dispatch(updateCBracketMatches(temp))\r\n                                // let res = await axios.post(\"http://localhost:5000/\", {});\r\n                            }}\r\n                        >\r\n                            <div>{bottomParty.name || teamNameFallback}</div>\r\n                            <div>{bottomParty.resultText ?? resultFallback(topParty)}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            /></>)}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SinglesCBracket;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}